<rt-import name="*" as="Components" from="components" />

<Components.Popup on="{props.on}" onClose="{props.hide}" rt-stateless>
    <Components.Modal>
        <Components.CardCollapsable title="{props.title}" alwaysOpen>
            <div class="referendum">
                <div class="flex-container align-justify align-middle">
                    <div class="lead uc">
                        <i class="icon icon-box-vote" />
                        <b>1,101,1337</b>
                        <span class="regular"> votes</span>
                    </div>

                    <div class="show-for-large">
                        <div class="referendum__controls uc" rt-if="props.voted === undefined">
                            <span class="green" onClick="{() => props.vote(props.id, true)}">
                                <i class="icon icon-thumbs-up hoverable" /> yes
                            </span>
                            <span class="red" onClick="{() => props.vote(props.id, false)}">
                                <i class="icon icon-thumbs-down hoverable" /> no
                            </span>
                        </div>
                        <div rt-if="props.voted !== undefined">
                            You voted
                            <b class="green" rt-if="props.voted">yes</b>
                            <b class="red" rt-if="!props.voted">no</b>.
                            <span onClick="{() => props.unvote(props.id)}" class="link">Change</span>.
                        </div>
                    </div>


                </div>

                <p class="small-spacing">By executing this action you are agreeing to the EOS constitution and this action's associated ricardian contract. The ricardian contract may be viewed in the Scatter approval prompt.</p>

                <div class="small-spacing text-center referendum__controls uc hide-for-large" rt-if="props.voted === undefined">
                    <span class="green" onClick="{() => props.vote(props.id, true)}">
                        <i class="icon icon-thumbs-up hoverable" /> yes
                    </span>
                    <span class="red" onClick="{() => props.vote(props.id, false)}">
                        <i class="icon icon-thumbs-down hoverable" /> no
                    </span>
                </div>

                <div class="small-spacing text-center hide-for-large" rt-if="props.voted !== undefined">
                    You voted
                    <b class="green" rt-if="props.voted">yes</b>
                    <b class="red" rt-if="!props.voted">no</b>.
                    <span onClick="{() => props.unvote(props.id)}" class="link">Change</span>.
                </div>

                <p class="referendum__stake">
                    <span class="referendum__sub-title">AVAILABLE STAKE</span><br />
                    <b>56,224</b> EOS
                </p>

            </div>
        </Components.CardCollapsable>
    </Components.Modal>
</Components.Popup>
